version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: student_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - student_management_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - student_management_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DEBUG=True
      - DB_NAME=student_management
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - backend_media:/app/media
      - backend_static:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - student_management_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend/student-management-frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/student-management-frontend:/app
      - /app/node_modules
    ports:
      - "4200:4200"
    networks:
      - student_management_network
    command: npm start

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - backend_static:/var/www/static
      - backend_media:/var/www/media
    depends_on:
      - backend
      - frontend
    networks:
      - student_management_network

volumes:
  postgres_data:
  backend_media:
  backend_static:

networks:
  student_management_network:
    driver: bridge
