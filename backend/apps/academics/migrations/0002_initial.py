# Generated by Django 4.2.7 on 2025-09-06 09:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='studentclass',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='accounts.student'),
        ),
        migrations.AddField(
            model_name='level',
            name='parent_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sublevels', to='academics.level'),
        ),
        migrations.AddField(
            model_name='grade',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='academics.examtype'),
        ),
        migrations.AddField(
            model_name='grade',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='accounts.student'),
        ),
        migrations.AddField(
            model_name='grade',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='academics.subject'),
        ),
        migrations.AddField(
            model_name='grade',
            name='trimester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='academics.trimester'),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='class_obj',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='academics.class'),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='academics.subject'),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teaching_subjects', to='accounts.teacher'),
        ),
        migrations.AddField(
            model_name='class',
            name='academic_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='academics.academicyear'),
        ),
        migrations.AddField(
            model_name='class',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='academics.level'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='class_obj',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='academics.class'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='accounts.student'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='accounts.teacher'),
        ),
        migrations.AlterUniqueTogether(
            name='studentclass',
            unique_together={('student', 'class_obj')},
        ),
        migrations.AlterUniqueTogether(
            name='classsubject',
            unique_together={('class_obj', 'subject')},
        ),
        migrations.AlterUniqueTogether(
            name='class',
            unique_together={('name', 'academic_year')},
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('student', 'class_obj', 'date')},
        ),
    ]
